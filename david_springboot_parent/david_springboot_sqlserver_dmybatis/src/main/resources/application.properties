server.port=19090
debug=true
logging.level.root=warn
logging.level.com.david.mapper=trace
# \u6570\u636E\u5E93\u8BBF\u95EE\u914D\u7F6E\u4E3B\u6570\u636E\u6E90\uFF0C\u9ED8\u8BA4\u7684
spring.datasource.url=jdbc:sqlserver://localhost:1433;Databasename=test
spring.datasource.username=sa
spring.datasource.password=1234
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.platform=sql_server
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true

# \u89C6\u56FE\u76F8\u5173
spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.ftl

spring.freemarker.cache=false
spring.freemarker.request-context-attribute=request
# mybatis \u914D\u7F6E
mybatis.type-aliases-package=com.david.entity
mybatis.mapper-locations=classpath:mapper/*.xml
# \u901A\u7528 Mapper \u914D\u7F6E..\u4E0D\u88AB\u626B\u63CF\u5230
mapper.mappers=com.david.util.mapper.MyMapper
mapper.not-empty=false
mapper.identity=sqlserver
# \u5206\u9875\u63D2\u4EF6\u914D\u7F6E
pagehelper.helperDialect=sqlserver
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
# \u8BE5\u53C2\u6570\u9ED8\u8BA4\u4E3Afalse,\u8BBE\u7F6E\u4E3Atrue\u65F6\uFF0C\u4F1A\u5C06RowBounds\u7B2C\u4E00\u4E2A\u53C2\u6570offset\u5F53\u6210pageNum\u9875\u7801\u4F7F\u7528.\u548CstartPage\u4E2D\u7684pageNum\u6548\u679C\u4E00\u6837
pagehelper.offset-as-page-num=true
#  \u8BE5\u53C2\u6570\u9ED8\u8BA4\u4E3Afalse,\u8BBE\u7F6E\u4E3Atrue\u65F6\uFF0C\u4F7F\u7528RowBounds\u5206\u9875\u4F1A\u8FDB\u884Ccount\u67E5\u8BE2
pagehelper.row-bounds-with-count=true
# \u7981\u7528\u53C2\u6570\u5408\u7406\u5316\u3002\u3002\u5426\u5219\u5982\u679C\u4E3Atrue\uFF0C\u5C31\u7B97\u6700\u540E\u4E00\u9875\u6CA1\u6709\u6570\u636E\u4E5F\u4F1A\u51FA\u73B0\u3002
pagehelper.reasonable=false


#spring:
#    mvc:
#        view:
#            prefix: /templates/
#            suffix: .ftl
#    freemarker:
#        cache: false
#        request-context-attribute: request
#
#
#mybatis:
#    type-aliases-package: tk.mybatis.springboot.model
#    mapper-locations: classpath:mapper/*.xml
#
#mapper:
#    mappers:
#        - tk.mybatis.springboot.util.MyMapper
#    not-empty: false
#    identity: MYSQL
#
#pagehelper:
#    helperDialect: mysql
#    reasonable: true
#    supportMethodsArguments: true
#    params: count=countSql